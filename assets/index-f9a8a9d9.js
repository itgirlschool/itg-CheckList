(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))o(e);new MutationObserver(e=>{for(const r of e)if(r.type==="childList")for(const d of r.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&o(d)}).observe(document,{childList:!0,subtree:!0});function s(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?r.credentials="include":e.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function o(e){if(e.ep)return;e.ep=!0;const r=s(e);fetch(e.href,r)}})();const T={title:"Первый уровень: Beginner (Новичок)",question:["Что такое TCP/IP, из каких уровней состоят и какие протоколы содержит. (В частности Ethernet, IP, TCP)","Что такое HTML. Базовые элементы разметки. Семантика SEO-оптимизация и доступность","Что такое CSS. Базовые свойства стилизации. Позиционирование элементов макета. Flexbox. Grid. Адаптивность посредством составления @media запросов. Псевдоэлементы и псевдоклассы. Методология БЭМ","Основы языка программирования JavaScript. Типы данных. Циклы, Условия, Работа с объектами. Функции. Прототипы и наследование. Работа с объектами. Методы массивов","Умеешь ли ты пользоваться программными средствами, аналогичными Slack, для организации коммуникации и совместной работы","Имеешь ли ты практический опыт и навыки работы с инструментами, подобными Trello, для организации рабочих процессов и управления задачами"],suggestion:["<span>Неделя 19. Асинхронность и работа с API</span>","<span>Неделя 1. Основы HTML.</span> <p>Неделя 2. Семантическая вёрстка и разметка</span>","<span>Неделя 4. Стилизация и CSS-свойства.</span> <span>Неделя 5. Позиционирование элементов.</span> <span>Неделя 6. CSS Grid.</span> <span>Неделя 7. Адаптивность верстка.</span> <span>Методология БЭМ</span>","<span>Неделя 9. Знакомство с JavaScript.</span> <span>Неделя 10. Функции.</span> <span>Неделя 14. Массивы.</span> <span>Неделя 15. Циклы.</span> <span>Неделя 17. Объекты и классы</span>","<span>Неделя 1. Основы HTML. Обзор инструментов</span>","<span>Недели 9-10. Командная работа по Agile</span>"]},O={title:"Второй уровень: Trainee (Стажёр)",question:["Умеешь работать с браузерным окружением и DOM (Document Object Model). Браузерные события. Обработка ошибок (Try/Catch). Пользовательские ошибки. Модульная система. Экспорт и импорт. Web API","Что делает JavaScript — асинхронным. Промисы. Fetch API. Синтаксический сахар — Async и Await","Cross-Origin Resource Sharing (CORS). Request & Response Headers (это была тема для самостоятельного изучения)","Что такое линтеры. Pre-commit Check","Как работает система управления версиями (Git). Регистрация на GitHub. Коммиты. Репозитории. Merge Requests. Checkout. Ветки","Что такое Node.js. Как работает менеджер пакетов Npm. package.json и package-lock.json. npm install, npm uninstall","Что такое препроцессор. SASS и SCSS. Переменные. Импорты. Вложенность. Модули. Миксины","Обладаешь ли ты навыками работы с редактором Figma или аналогичными инструментами в сфере дизайна или прототипирования","Каков уровень вашего знакомства и опыта использования фреймворка Bootstrap и других подобных для разработки веб-интерфейсов"],suggestion:["<span>Неделя 11. Знакомство с DOM.</span> <span>Неделя 20. Обработка ошибок. Node.js и npm.</span> <span>Неделя 19. Асинхронность и работа с API</span>","<span>Неделя 19. Асинхронность и работа с API</span>","Cross-Origin Resource Sharing (CORS). Request & Response Headers (это была тема для самостоятельного изучения)","Что такое линтеры. Pre-commit Check (это была тема для самостоятельного изучения)","Неделя 10. Командная работа в одной ветке Git (это был вебинар с наставницей)","<span>Неделя 20. Обработка ошибок. Node.js и npm</span>","<span>Неделя 7. Адаптивная вёрстка. Препроцессоры</span>","<span>Неделя 3. Графика. Figma</span>","<span>Неделя 8. СSS Фреймворки</span>"]},R={title:"Третий уровень: Junior (Младший разработчик)",question:["Что такое сборщик модулей. Babel. Настройка Webpack. Правила. Модули. Плагины. DevServer. Переход к Vite","Что такое React и какие проблемы он решает. Жизненный цикл компонентов. Особенности виртуального DOM-дерева. React компоненты. Базовые хуки. React Refs. JSX синтаксис. Props & State","Особенности FLUX архитектуры. Reducers. Actions. Хук useContext. Redux и Redux Toolkit. Redux Thunk. RTK Query. (По желанию можно изучить MobX и/или Zustand)","Что такое роут. Из чего состоит объект Location. Библиотека React Router","Как повысить эффективность стилизации. Что такое UI библиотека. MaterialUI"],suggestion:["Что такое сборщик модулей. Babel. Настройка Webpack. Правила. Модули. Плагины. DevServer. Переход к Vite (это был вебинар с наставницей)","<span>Неделя 21. Введение в React.</span> <span>Неделя 22. Компоненты.</span> <span>Неделя 23. CSS в React.</span> <span>Неделя 24. Props & State.</span> <span>Неделя 25. Жизненный цикл компонента</span>","<span>Неделя 29. Context</a> + Библиотеки (это была тема для самостоятельного изучения)","<span>Неделя 26. Роутинг.</span>","Как повысить эффективность стилизации. Что такое UI библиотека. MaterialUI (это была тема для самостоятельного изучения)"]},i={beginner:T,trainee:O,junior:R};let m="",a=0;const l=document.querySelector(".container");console.log(l);const u=Object.keys(i);function h(){m="first";const t=document.getElementById("content");t.innerHTML="";const n=`
            <div class="indent">Мы подготовили чек-лист, с помощью которого ты сможешь определить свой уровень знаний и готовность стать
                Junior Frontend разработчицей</div>
            <div class="pinkText indent">Оцени свои Hard Skills по 5 бальной шкале, где 5 - знаю отлично, а 1 - не знаю ничего</div>

        <div class="form indent">
            <input class="inputField inputName" type="text" placeholder="Твое имя и фамилия" >
            <input class="inputField inputGroup" type="text" placeholder="Твоя группа" >
        </div>
        <div class="btnField indent">
            <button id="firstButton">Начать</button>
        </div>`;t.insertAdjacentHTML("beforeend",n),document.querySelector("#firstButton").addEventListener("click",()=>{A()&&(M(),a=0,x())})}function A(){const t=document.querySelector(".inputName"),n=document.querySelector(".inputGroup");if(t.value===""||n.value===""){if(!document.querySelector("#alert_div")){const s=document.createElement("div");s.id="alert_div";const o=document.querySelector(".btnField");s.innerHTML='<h3 class="center pinkText">* Необходимо заполнить все поля</h3>',o.before(s)}return!1}else t.value=t.value[0].toUpperCase()+t.value.substring(1).toLowerCase();return!0}const v={userName:null,groupNum:null};function M(){const t=document.querySelector(".inputName"),n=document.querySelector(".inputGroup");v.userName=t.value,v.groupNum=n.value}function b(t,n,s){m=s,l.innerHTML="",document.querySelector("div").insertAdjacentHTML("beforeend",`<h2 class="indent pinkText">${t}</h2>`),n.forEach(e=>{const r=q(e);l.appendChild(r)}),l.insertAdjacentHTML("beforeend",`
        <div class="cardButtons">
            <button class='prevCardsBtn' >Назад</button>
            <button class='nextCardsBtn' >Вперед</button>
        </div>`)}function N(){return'<div class="input indent"><input type="range" min="1" max="5" class="slider" value="1"><div class="numbers"><div>1</div><div>2</div><div>3</div><div>4</div><div>5</div></div></div>'}function q(t){const n=document.createElement("div");n.classList.add("item");const s=`
                    <div class="wrapperContent">
                    <div class="question indent">${t}</div>
                    <div class="range indent">${N()}</div>
                    </div>`;return n.insertAdjacentHTML("beforeend",s),n}function x(){const t=Object.keys(i);b(i[t[a]].title,i[t[a]].question,t[a])}l.addEventListener("click",t=>{t.target.classList.contains("nextCardsBtn")?(C(m),k()):t.target.classList.contains("prevCardsBtn")&&(C(m),P())});function k(){a+1===u.length?D():(a+=1,b(i[u[a]].title,i[u[a]].question,u[a]))}function P(){a===0?h():(a-=1,b(i[u[a]].title,i[u[a]].question,u[a]))}function C(t){const n=i[u[a]].question,s=Array.from(l.querySelectorAll(".slider")).map(e=>e.value),o={setOfQuestions:n,currentRangeValues:s};v[t]=o,localStorage.setItem("userData",JSON.stringify(v))}function D(){const n=Object.keys(JSON.parse(localStorage.getItem("userData"))).filter(c=>c!=="userName"&&c!=="groupNum");let s=0;const o=JSON.parse(localStorage.getItem("userData"));n.forEach(c=>{let y=o[c].currentRangeValues.reduce((S,f)=>Number(S)+Number(f));s+=y});const e=s*100/100;function r(){return e<=59?'"Новичок"':e>=60&&e<80?'"Стажёр"':'"Младший разработчик"'}function d(){return e<=59?"<h2>Ты можешь смело искать предложения по стажировке, но повтори перед этим следующие темы, находящиеся по ссылкам ниже:</h2>":e>=60&&e<80?"<h2>Перед составлением резюме рекомендую сходить по нижеприведенным ссылкам и повторить темы:</h2>":'<h2 class="pinkText">Можешь приступать к подготовке к собеседованию!</h2><iframe src="https://www.youtube.com/embed/cyfaOAH-CF0"></iframe>'}const g=document.getElementById("content");g.innerHTML=`<h2 class="pinkText">Отличная работа, поздравляю!</h2><div class="grid"><h3>Твой результат:</h3><h3 class="pinkText">${e}%</h3></div><div class="grid"><h3>что соответсвтвует уровню:</h3><h3 class="pinkText">`+r()+"</h3></div><div>"+d()+"</div>";const p=document.createElement("button");if(p.textContent="В начало",g.append(p),p.addEventListener("click",c=>{g.innerHTML="",h(),p.style.display="none"}),e>=80)return"";n.forEach((c,L)=>{o[c].currentRangeValues.forEach((S,f)=>{S<=3&&(console.log(i[c].suggestion[f]),p.insertAdjacentHTML("beforebegin",`<h3 class="pinkTekst">${i[c].suggestion[f]}</h3>`))})})}document.addEventListener("DOMContentLoaded",function(){h()});
