{
    "beginner": {
        "title": "Первый уровень: Beginner (Новичок)",
        "question": [
            "Что такое TCP/IP, из каких уровней состоят и какие протоколы содержит. (В частности Ethernet, IP, TCP)",
            "Что такое HTML. Базовые элементы разметки. Семантика SEO-оптимизация и доступность",
            "Что такое CSS. Базовые свойства стилизации. Позиционирование элементов макета. Flexbox. Grid. Адаптивность посредством составления @media запросов. Псевдоэлементы и псевдоклассы. Методология БЭМ",
            "Основы языка программирования JavaScript. Типы данных. Циклы, Условия, Работа с объектами. Функции. Прототипы и наследование. Работа с объектами. Методы массивов",
            "Умеешь ли ты пользоваться программными средствами, аналогичными Slack, для организации коммуникации и совместной работы",
            "Имеешь ли ты практический опыт и навыки работы с инструментами, подобными Trello, для организации рабочих процессов и управления задачами"
        ],
        "suggestion": [
            "<span>Асинхронность и работа с API.</span>",
            "<p>Семантическая вёрстка и разметка.</span>",
            "<span>Стилизация и CSS-свойства,</span> <span>Позиционирование элементов,</span> <span>CSS Grid,</span> <span>Адаптивность верстка,</span> <span>Методология БЭМ.</span>",
            "<span>Знакомство с JavaScript,</span> <span>Функции,</span> <span>Массивы,</span> <span>Циклы,</span> <span>Объекты и классы.</span>",
            "<span>Основы HTML, Обзор инструментов.</span>",
            "<span>Командная работа по Agile.</span>"
        ]
    },
    "trainee": {
        "title": "Второй уровень: Trainee (Стажёр)",
        "question": [
            "Умеешь работать с браузерным окружением и DOM (Document Object Model). Браузерные события. Обработка ошибок (Try/Catch). Пользовательские ошибки. Модульная система. Экспорт и импорт. Web API",
            "Что делает JavaScript — асинхронным. Промисы. Fetch API. Синтаксический сахар — Async и Await",
            "Cross-Origin Resource Sharing (CORS). Request & Response Headers (это была тема для самостоятельного изучения)",
            "Что такое линтеры. Pre-commit Check",
            "Как работает система управления версиями (Git). Регистрация на GitHub. Коммиты. Репозитории. Merge Requests. Checkout. Ветки",
            "Что такое Node.js. Как работает менеджер пакетов Npm. package.json и package-lock.json. npm install, npm uninstall",
            "Что такое препроцессор. SASS и SCSS. Переменные. Импорты. Вложенность. Модули. Миксины",
            "Обладаешь ли ты навыками работы с редактором Figma или аналогичными инструментами в сфере дизайна или прототипирования",
            "Каков уровень вашего знакомства и опыта использования фреймворка Bootstrap и других подобных для разработки веб-интерфейсов"
        ],
        "suggestion": [
            "<span>Знакомство с DOM,</span> <span>Обработка ошибок, Node.js и npm,</span> <span>Асинхронность и работа с API.</span>",
            "<span>Асинхронность и работа с API.</span>",
            "Cross-Origin Resource Sharing (CORS). Request & Response Headers (это была тема для самостоятельного изучения).",
            "Что такое линтеры, Pre-commit Check (это была тема для самостоятельного изучения).",
            "Командная работа в одной ветке Git (это был вебинар с наставницей).",
            "<span> Обработка ошибок, Node.js и npm.</span>",
            "<span>Адаптивная вёрстка, Препроцессоры.</span>",
            "<span>Графика, Figma.</span>",
            "<span>СSS Фреймворки.</span>"
        ]
    },
    "junior": {
        "title": "Третий уровень: Junior (Младший разработчик)",
        "question": [
            "Что такое сборщик модулей. Babel. Настройка Webpack. Правила. Модули. Плагины. DevServer. Переход к Vite",
            "Что такое React и какие проблемы он решает. Жизненный цикл компонентов. Особенности виртуального DOM-дерева. React компоненты. Базовые хуки. React Refs. JSX синтаксис. Props & State",
            "Особенности FLUX архитектуры. Reducers. Actions. Хук useContext. Redux и Redux Toolkit. Redux Thunk. RTK Query. (По желанию можно изучить MobX и/или Zustand)",
            "Что такое роут. Из чего состоит объект Location. Библиотека React Router",
            "Как повысить эффективность стилизации. Что такое UI библиотека. MaterialUI"
        ],
        "suggestion": [
            "Что такое сборщик модулей, Babel, Настройка Webpack, Модули, Плагины, DevServer, Переход к Vite (это был вебинар с наставницей).",
            "<span>Введение в React,</span> <span>Компоненты,</span> <span>CSS в React,</span> <span>Props & State,</span> <span>Жизненный цикл компонента.</span>",
            "<span>Context,</span> + Библиотеки (это была тема для самостоятельного изучения).",
            "<span>Роутинг.</span>",
            "Как повысить эффективность стилизации, Что такое UI библиотека. MaterialUI (это была тема для самостоятельного изучения)."
        ]
    }
}